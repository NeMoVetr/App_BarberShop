package com.example.barbershop

import android.content.Intent
import android.os.Bundle
import android.widget.Toast

import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView

import com.google.android.material.bottomnavigation.BottomNavigationView

import androidx.lifecycle.lifecycleScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import kotlinx.coroutines.withContext

import androidx.activity.enableEdgeToEdge
import androidx.appcompat.app.AppCompatActivity


import com.example.barbershop.network.*

class HallShowActivity : AppCompatActivity() {

    private lateinit var recyclerView: RecyclerView
    private lateinit var hallAdapter: HallAdapter
    private lateinit var apiRepository: ApiRepository


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContentView(R.layout.activity_hall_show)

        // Инициализация BottomNavigationView
        val bottomNavigationView: BottomNavigationView = findViewById(R.id.bottom_navigation_halls)

        // Обработчик кликов по пунктам меню
        bottomNavigationView.setOnItemSelectedListener { menuItem ->
            when (menuItem.itemId) {
                R.id.nav_employee -> {
                    val intent = Intent(this, EmployeeShowActivity::class.java)
                    startActivity(intent)
                    true
                }

                R.id.nav_hall -> {

                    true
                }

                R.id.nav_profile -> {
                    val intent = Intent(this, ProfileClientActivity::class.java)
                    startActivity(intent)
                    true
                }

                R.id.nav_service -> {
                    val intent = Intent(this, ServiceActivity::class.java)
                    startActivity(intent)
                    true
                }

                R.id.nav_visit -> {
                    val intent = Intent(this, VisitShowActivity::class.java)
                    startActivity(intent)
                    true
                }

                else -> false
            }
        }

        apiRepository = ApiRepository(SessionManager(this))

        recyclerView = findViewById(R.id.recyclerViewHalls)
        recyclerView.layoutManager = LinearLayoutManager(this)

        hallAdapter = HallAdapter()
        recyclerView.adapter = hallAdapter

        loadHalls()

    }

    private fun loadHalls() {
        lifecycleScope.launch(Dispatchers.IO) {
            val response = apiRepository.getHalls().execute()
            if (response.isSuccessful  && response.body() != null) {
                val halls = response.body() ?: emptyList()
                withContext(Dispatchers.Main) {
                    hallAdapter.submitList(halls)
                }
            } else {
                withContext(Dispatchers.Main) {
                    Toast.makeText(
                        this@HallShowActivity,
                        "Ошибка загрузки залов",
                        Toast.LENGTH_SHORT
                    ).show()
                }
            }
        }
    }
}